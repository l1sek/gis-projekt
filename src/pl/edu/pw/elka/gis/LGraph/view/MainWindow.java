package pl.edu.pw.elka.gis.LGraph.view;

import java.awt.BorderLayout;
import java.io.File;
import javax.swing.JFileChooser;
import pl.edu.pw.elka.gis.LGraph.core.model.GraphEdge;
import pl.edu.pw.elka.gis.LGraph.core.model.GraphNode;
import pl.edu.pw.elka.gis.LGraph.core.process.GraphActionListenerImpl;
import pl.edu.pw.elka.gis.LGraph.core.process.action.AddEdgeAction;
import pl.edu.pw.elka.gis.LGraph.core.process.action.AddNodeAction;
import pl.edu.pw.elka.gis.LGraph.core.process.action.RemoveEdgeAction;
import pl.edu.pw.elka.gis.LGraph.core.process.action.RemoveNodeAction;
import pl.edu.pw.elka.gis.LGraph.persistence.FileActionListener;
import pl.edu.pw.elka.gis.LGraph.persistence.action.LoadGraphAction;
import pl.edu.pw.elka.gis.LGraph.persistence.action.SaveGraphAction;
import pl.edu.pw.elka.gis.LGraph.view.addons.GraphDrawing;

/**
 * Represents GUI main window.
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     * @param userGraphActionListener
     * @param userFileActionListener
     */
    public MainWindow(GraphActionListenerImpl userGraphActionListener, FileActionListener userFileActionListener) {
        graphActionListener = userGraphActionListener;
        fileActionListener = userFileActionListener;
        fileChooser = new JFileChooser();
        
        initComponents();
        actionComboBoxItemStateChanged(null); // arranges UI for default choose
        setLocationRelativeTo(null); // puts this window on the center of screen
        
        inputGraphPanel.add(((GraphDrawing)graphActionListener.getGraphView()).getPanel(), BorderLayout.CENTER);                     
        outputGraphPanel.add(((GraphDrawing)graphActionListener.getLineGraphView()).getPanel(), BorderLayout.CENTER);
        
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        graphsPanel = new javax.swing.JPanel();
        inputGraphPanel = new javax.swing.JPanel();
        outputGraphPanel = new javax.swing.JPanel();
        controlPanel = new javax.swing.JPanel();
        graphControlPanel = new javax.swing.JPanel();
        actionLabel = new javax.swing.JLabel();
        actionComboBox = new javax.swing.JComboBox<>();
        firstNodeLabel = new javax.swing.JLabel();
        firstNodeTextField = new javax.swing.JTextField();
        secondNodeLabel = new javax.swing.JLabel();
        secondNodeTextField = new javax.swing.JTextField();
        execButton = new javax.swing.JButton();
        fileControlPanel = new javax.swing.JPanel();
        openGraphButton = new javax.swing.JButton();
        saveGraphButton = new javax.swing.JButton();
        saveLineGraphButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(720, 560));
        getContentPane().setLayout(new java.awt.BorderLayout(5, 5));

        graphsPanel.setMaximumSize(new java.awt.Dimension(32767, 300));
        graphsPanel.setMinimumSize(new java.awt.Dimension(400, 400));
        graphsPanel.setPreferredSize(new java.awt.Dimension(800, 400));
        graphsPanel.setLayout(new java.awt.GridLayout());

        inputGraphPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Graf prosty"));
        inputGraphPanel.setLayout(new java.awt.BorderLayout());
        graphsPanel.add(inputGraphPanel);

        outputGraphPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Graf krawędziowy"));
        outputGraphPanel.setLayout(new java.awt.BorderLayout());
        graphsPanel.add(outputGraphPanel);

        getContentPane().add(graphsPanel, java.awt.BorderLayout.NORTH);

        controlPanel.setMaximumSize(new java.awt.Dimension(32767, 200));
        controlPanel.setMinimumSize(new java.awt.Dimension(400, 100));
        controlPanel.setPreferredSize(new java.awt.Dimension(800, 100));

        graphControlPanel.setLayout(new java.awt.GridLayout(3, 2));

        actionLabel.setText("Akcja:");
        graphControlPanel.add(actionLabel);

        actionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dodaj wierzchołek", "Usuń wierzchołek", "Dodaj krawędź", "Usuń krawędź" }));
        actionComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                actionComboBoxItemStateChanged(evt);
            }
        });
        graphControlPanel.add(actionComboBox);

        firstNodeLabel.setText("Wierzchołek:");
        graphControlPanel.add(firstNodeLabel);
        graphControlPanel.add(firstNodeTextField);

        secondNodeLabel.setText("Wierzchołek 2:");
        graphControlPanel.add(secondNodeLabel);

        secondNodeTextField.setEnabled(false);
        graphControlPanel.add(secondNodeTextField);

        execButton.setText("Wykonaj!");
        execButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                execButtonActionPerformed(evt);
            }
        });

        fileControlPanel.setLayout(new java.awt.GridLayout(3, 1));

        openGraphButton.setText("Wczytaj graf");
        openGraphButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openGraphButtonActionPerformed(evt);
            }
        });
        fileControlPanel.add(openGraphButton);

        saveGraphButton.setText("Zapisz graf");
        saveGraphButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveGraphButtonActionPerformed(evt);
            }
        });
        fileControlPanel.add(saveGraphButton);

        saveLineGraphButton.setText("Zapisz graf krawędziowy");
        saveLineGraphButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveLineGraphButtonActionPerformed(evt);
            }
        });
        fileControlPanel.add(saveLineGraphButton);

        javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(graphControlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79)
                        .addComponent(fileControlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(execButton)))
                .addContainerGap(175, Short.MAX_VALUE))
        );
        controlPanelLayout.setVerticalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(fileControlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(graphControlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(execButton)
                .addContainerGap())
        );

        getContentPane().add(controlPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void execButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_execButtonActionPerformed
        int actionIndex = actionComboBox.getSelectedIndex();
        
        GraphNode node = new GraphNode(firstNodeTextField.getText().trim());
        GraphEdge edge = null;
        
        if (actionIndex == 2 || actionIndex == 3) {
             GraphNode secondNode = new GraphNode(secondNodeTextField.getText().trim());
             edge = new GraphEdge(node, secondNode);
        }
        
        firstNodeTextField.setText("");
        secondNodeTextField.setText("");
        
        switch (actionIndex) {
            case 0: {
                graphActionListener.registerAction(new AddNodeAction(node));
                break;
            }
            case 1: {
                graphActionListener.registerAction(new RemoveNodeAction(node));
                break;
            }
            case 2: {
                graphActionListener.registerAction(new AddEdgeAction(edge));
                break;
            }
            case 3: {
                graphActionListener.registerAction(new RemoveEdgeAction(edge));
                break;
            }
        }
    }//GEN-LAST:event_execButtonActionPerformed

    private void actionComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_actionComboBoxItemStateChanged
        int actionIndex = actionComboBox.getSelectedIndex();
        boolean edgeAction = actionIndex == 2 || actionIndex == 3;
        
        firstNodeTextField.setText("");
        firstNodeLabel.setText("Wierzchołek" + (edgeAction ? " 1" : "") + ":");
        secondNodeLabel.setVisible(edgeAction);
        secondNodeTextField.setText("");
        secondNodeTextField.setEnabled(edgeAction);
        secondNodeTextField.setVisible(edgeAction);
    }//GEN-LAST:event_actionComboBoxItemStateChanged

    private void openGraphButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openGraphButtonActionPerformed
        int returnVal = fileChooser.showOpenDialog(MainWindow.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            fileActionListener.registerAction(new LoadGraphAction(file, graphActionListener));
        }
    }//GEN-LAST:event_openGraphButtonActionPerformed

    private void saveGraphButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveGraphButtonActionPerformed
        int returnVal = fileChooser.showSaveDialog(MainWindow.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            fileActionListener.registerAction(new SaveGraphAction(file, graphActionListener.getGraph()));
        }
    }//GEN-LAST:event_saveGraphButtonActionPerformed

    private void saveLineGraphButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveLineGraphButtonActionPerformed
        int returnVal = fileChooser.showSaveDialog(MainWindow.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            fileActionListener.registerAction(new SaveGraphAction(file, graphActionListener.getLineGraph()));
        }
    }//GEN-LAST:event_saveLineGraphButtonActionPerformed

    private GraphActionListenerImpl graphActionListener;
    private FileActionListener fileActionListener;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> actionComboBox;
    private javax.swing.JLabel actionLabel;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JButton execButton;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JPanel fileControlPanel;
    private javax.swing.JLabel firstNodeLabel;
    private javax.swing.JTextField firstNodeTextField;
    private javax.swing.JPanel graphControlPanel;
    private javax.swing.JPanel graphsPanel;
    private javax.swing.JPanel inputGraphPanel;
    private javax.swing.JButton openGraphButton;
    private javax.swing.JPanel outputGraphPanel;
    private javax.swing.JButton saveGraphButton;
    private javax.swing.JButton saveLineGraphButton;
    private javax.swing.JLabel secondNodeLabel;
    private javax.swing.JTextField secondNodeTextField;
    // End of variables declaration//GEN-END:variables
}
